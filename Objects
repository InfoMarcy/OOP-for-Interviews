1. An object in javascript is basically a collection of key, values pair.
In javascript functions are obects

const circle = {
    radios: 1,
    location: {
        x: 1,
        y: 1
    },

    draw: function () {
        console.log("draw");
    }
};

circle.draw();


2. Factory Function
function createCircle(radius){

  return {
        radius,    
        draw: function () {
            console.log("draw");
        }
    };

};

const circle = createCircle(1);
circle.draw();


3.  Contructor Function
function Circle(radius){
    this.radius = radius,
    this.draw = function(){
        console.log("Another circle");
    }
};

const anotherCircle = new Circle(1);


# VALUES TYPES VS REFERENCE TYPES
1. VALUE TYPES
Number
String
Boolean
Symbol
undefined
null

2. Reference Types
Object
Function
Array

Primitives are copied by their value and Objects are copiedd by their refrence.
// PRIMITIVES
let number = 10;

function increase(number){
    number++;
};

increase(number);
console.log("Number => ", number);  // Number =>  10


//REFERENCE TYPES
let obj = { value : 10};

function increase(obj){
    obj.value++;
};

increase(obj);
console.log("Obj => ", obj);  // Obj => {value: 11}


#ADD A PROPERTY IN JAVASCRIPT
1. circle.location = { x: 1};
2. circle['location'] =  { x: 1};

#DELETE A PROPERTY IN JAVASCRIPT
delete  circle.location
